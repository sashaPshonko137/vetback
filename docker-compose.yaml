version: '3.8'

services:
  db:
    image: postgres:14-alpine
    ports:
      - "54321:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=1242
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

  vet:
    build: .
    environment:
      CONFIG_PATH: "./prod.yaml"
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    depends_on:
      - db

  migrator:
    build:
      context: .
      dockerfile: migration.Dockerfile
    environment:
      MIGRATION_DIR: "./migrations"
      MIGRATION_DSN: "host=db port=5432 dbname=postgres user=postgres password=1242 sslmode=disable"
    restart: on-failure

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    ports:
      - "4000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - default
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    depends_on:
      - prometheus

volumes:
  grafana_data: {}
  prometheus_data: {}